.container{
    background-color: lightsalmon;
    border : 1px solid black;
    border-radius: 10px;
    /* En las DevTools se ve que ahora al lado del contenedor pone grid */
    display:grid;
    /* Ahora le indicamos el numero de columnas que queremos y su tamaño */
    /* Se distribuye el contenido de izq a der como se lee */
    /* auto en GRID: */
    /* Si ponemos el auto hace que el navegador le ponga un tamaño, depende del contenido
    y del tamaño que quede */
    /* Unidad nueva para GRID */
    /* Hay una unidad especial para grid que es la de fracción: */
    /* metodo repeat: */
    /* metodo minmax */
    grid-template-columns: minmax(200px,1fr) repeat(2, 1fr);  
    /* Ahora indicamos como seran las filas: */
    /* La cuadrícula se crea a partir de las filas y columnas que yo pongo
    por lo que podria haber un espacio vacio */
    /* Las filas se generan automaticamente dependiendo del espacio: */
    /* Pero con grid-auto-rows podemos decirle que la altura de todas las filas generadas
    sea la altura indicada */
    grid-auto-rows:200px;
    grid-template-rows: 200px 200px 200px;
    gap: 25px;
}

.container div{
    background-color: lightblue;
    border: 2px solid blue;
    border-radius: 10px;
}

/* Si pongo dos elementos que ocupen las mismas columnas o filas se pondran uno encima
de otro y no haria falta usar position absolute para hacer */
.container div:first-child{
    background-color: lightgreen;
    border: 2px solid green;
    /* Puedo delimitar en que columna empieza y termina mi elemento */
    grid-column-start: 1;
    grid-column-end: 2;
    /* Tambien se puede escribir así: */
    grid-column: 1/3;
    /* Tambien puedo hacer lo mismo con las filas */
    grid-row-start: 1;
    grid-row-end:3;
    grid-row: 1 /3;
    /* Tambien se puede hacer diciendole cuanto debe ocupar: */
    grid-row-start: span 2;
}